

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat May 11 20:38:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F47Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 18/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F47Q43 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53 ;;_temp3	offset	0
    54 ;;_d	offset=-2 (param)
    55 ;;_e	offset=-4 (param)
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59   0025C8                     __pcinit:
    60                           	callstack 0
    61   0025C8                     start_initialization:
    62                           	callstack 0
    63   0025C8                     __initialization:
    64                           	callstack 0
    65                           
    66                           ; Clear objects allocated to COMRAM (2 bytes)
    67   0025C8  6A2F               	clrf	(__pbssCOMRAM+1)& (0+255),c
    68   0025CA  6A2E               	clrf	__pbssCOMRAM& (0+255),c
    69   0025CC                     end_of_initialization:
    70                           	callstack 0
    71   0025CC                     __end_of__initialization:
    72                           	callstack 0
    73   0025CC  0100               	movlb	0
    74   0025CE  EF81  F012         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	bssCOMRAM
    77   00052E                     __pbssCOMRAM:
    78                           	callstack 0
    79   00052E                     _value4:
    80                           	callstack 0
    81   00052E                     	ds	2
    82                           
    83                           	psect	cstackCOMRAM
    84   000521                     __pcstackCOMRAM:
    85                           	callstack 0
    86   000521                     ?_add2:
    87                           	callstack 0
    88   000521                     add@a:
    89                           	callstack 0
    90   000521                     add2@b:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x0
    94   000521                     	ds	2
    95   000523                     add2@c:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x2
    99   000523                     	ds	2
   100   000525                     add2@temp2:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x4
   104   000525                     	ds	2
   105   000527                     ??_main:
   106                           
   107                           ; 1 bytes @ 0x6
   108   000527                     	ds	2
   109   000529                     main@value2:
   110                           	callstack 0
   111                           
   112                           ; 2 bytes @ 0x8
   113   000529                     	ds	2
   114   00052B                     main@value3:
   115                           	callstack 0
   116                           
   117                           ; 2 bytes @ 0xA
   118   00052B                     	ds	2
   119   00052D                     main@value1:
   120                           	callstack 0
   121                           
   122                           ; 1 bytes @ 0xC
   123   00052D                     	ds	1
   124                           
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 2, incstack = 4, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 67 in file "xc8_sam09.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;  value3          2   10[COMRAM] unsigned int 
   135 ;;  value2          2    8[COMRAM] unsigned int 
   136 ;;  value1          1   12[COMRAM] unsigned char 
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   147 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   149 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   150 ;;Total ram usage:        7 bytes
   151 ;; Hardware stack levels required when called: 1
   152 ;; This function calls:
   153 ;;		_add
   154 ;;		_add2
   155 ;;		_add3
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162   002502                     __ptext0:
   163                           	callstack 0
   164   002502                     _main:
   165                           	callstack 126
   166   002502                     
   167                           ;xc8_sam09.c: 68:  unsigned char value1;;xc8_sam09.c: 69:  unsigned int value2;;xc8_sam0
      +                          9.c: 70:  unsigned int value3;;xc8_sam09.c: 72:  value1 = add(3);
   168   002502  0E03               	movlw	3
   169   002504  ECE9  F012         	call	_add
   170   002508  6E2D               	movwf	main@value1^(0+1280),c
   171                           
   172                           ;xc8_sam09.c: 73:  value2 = add2(9, 255);
   173   00250A  0E00               	movlw	0
   174   00250C  6E22               	movwf	(add2@b+1)^(0+1280),c
   175   00250E  0E09               	movlw	9
   176   002510  6E21               	movwf	add2@b^(0+1280),c
   177   002512  0E00               	movlw	0
   178   002514  6E24               	movwf	(add2@c+1)^(0+1280),c
   179   002516  6823               	setf	add2@c^(0+1280),c
   180   002518  ECD9  F012         	call	_add2	;wreg free
   181   00251C  C521  F529         	movff	?_add2,main@value2
   182   002520  C522  F52A         	movff	?_add2+1,main@value2+1
   183   002524                     
   184                           ;xc8_sam09.c: 74:  value3 = add3(19, 1255);
   185   002524  0EE7               	movlw	231
   186   002526  6EE6               	movwf	postinc1,c
   187   002528  0E04               	movlw	4
   188   00252A  6EE6               	movwf	postinc1,c
   189   00252C  0E13               	movlw	19
   190   00252E  6EE6               	movwf	postinc1,c
   191   002530  0E00               	movlw	0
   192   002532  6EE6               	movwf	postinc1,c
   193   002534  ECB4  F012         	call	_add3	;wreg free
   194   002538  0061  F404  F52B   	movff	btemp,main@value3
   195   00253E  0061  F408  F52C   	movff	btemp+1,main@value3+1
   196   002544                     l733:
   197                           
   198                           ;xc8_sam09.c: 77:   value4 += value1 + value2 + value3;
   199   002544  502D               	movf	main@value1^(0+1280),w,c
   200   002546  2429               	addwf	main@value2^(0+1280),w,c
   201   002548  6E27               	movwf	??_main^(0+1280),c
   202   00254A  0E00               	movlw	0
   203   00254C  202A               	addwfc	(main@value2+1)^(0+1280),w,c
   204   00254E  6E28               	movwf	(??_main+1)^(0+1280),c
   205   002550  502B               	movf	main@value3^(0+1280),w,c
   206   002552  2627               	addwf	??_main^(0+1280),f,c
   207   002554  502C               	movf	(main@value3+1)^(0+1280),w,c
   208   002556  2228               	addwfc	(??_main+1)^(0+1280),f,c
   209   002558  5027               	movf	??_main^(0+1280),w,c
   210   00255A  262E               	addwf	_value4^(0+1280),f,c	;volatile
   211   00255C  5028               	movf	(??_main+1)^(0+1280),w,c
   212   00255E  222F               	addwfc	(_value4+1)^(0+1280),f,c	;volatile
   213   002560  EFA2  F012         	goto	l733
   214   002564  EFFC  F0FF         	goto	start
   215   002568                     __end_of_main:
   216                           	callstack 0
   217                           
   218 ;; *************** function _add3 *****************
   219 ;; Defined at:
   220 ;;		line 16 in file "sub_add.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;  d               2  [STACK] unsigned int 
   223 ;;  e               2  [STACK] unsigned int 
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  temp3           2  [STACK] unsigned int 
   226 ;; Return value:  Size  Location     Type
   227 ;;                  2  [STACK] unsigned int 
   228 ;; Registers used:
   229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels used: 1
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		_main
   245 ;; This function uses a reentrant model
   246 ;;
   247                           
   248                           	psect	text1
   249   002568                     __ptext1:
   250                           	callstack 0
   251   002568                     _add3:
   252                           	callstack 0
   253                           
   254                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   255   002568  52E6               	movf	postinc1,f,c
   256   00256A  52E6               	movf	postinc1,f,c
   257   00256C                     
   258                           ;sub_add.c: 17:  unsigned int temp3;;sub_add.c: 18:  temp3 = d + e;
   259                           ;stkvar	_e @ sp[(-2)+-4]
   260                           ;stkvar	_d @ sp[(-2)+-2]
   261   00256C  0EFC               	movlw	-4
   262   00256E  0061 F38C  F50B    	movff	plusw1,btemp+10
   263   002574  0EFD               	movlw	-3
   264   002576  0061 F38C  F50C    	movff	plusw1,btemp+11
   265   00257C  0EFA               	movlw	-6
   266   00257E  50E3               	movf	plusw1,w,c
   267   002580  260B               	addwf	(btemp+10)^(0+1280),f,c
   268   002582  0EFB               	movlw	-5
   269   002584  50E3               	movf	plusw1,w,c
   270   002586  220C               	addwfc	(btemp+11)^(0+1280),f,c
   271                           
   272                           ;stkvar	_temp3 @ sp[(-2)+0]
   273   002588  0EFE               	movlw	-2
   274   00258A  0061  F42C  F4E3   	movff	btemp+10,plusw1
   275   002590  0EFF               	movlw	-1
   276   002592  0061  F430  F4E3   	movff	btemp+11,plusw1
   277   002598                     
   278                           ;sub_add.c: 19:  return temp3;
   279                           ;stkvar	_temp3 @ sp[(-2)+0]
   280   002598  0EFE               	movlw	-2
   281   00259A  0061 F38C  F501    	movff	plusw1,btemp
   282   0025A0  0EFF               	movlw	-1
   283   0025A2  0061 F38C  F502    	movff	plusw1,btemp+1
   284   0025A8                     
   285                           ; _add3: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize 
      +                          = 4, vargsize = 0
   286   0025A8  0EFA               	movlw	250
   287   0025AA  26E1               	addwf	fsr1l,f,c
   288   0025AC  0EFF               	movlw	255
   289   0025AE  22E2               	addwfc	fsr1h,f,c
   290   0025B0  0012               	return		;funcret
   291   0025B2                     __end_of_add3:
   292                           	callstack 0
   293                           
   294 ;; *************** function _add2 *****************
   295 ;; Defined at:
   296 ;;		line 9 in file "sub_add.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  b               2    0[COMRAM] unsigned int 
   299 ;;  c               2    2[COMRAM] unsigned int 
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  temp2           2    4[COMRAM] unsigned int 
   302 ;; Return value:  Size  Location     Type
   303 ;;                  2    0[COMRAM] unsigned int 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   315 ;;Total ram usage:        6 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; This function calls:
   318 ;;		Nothing
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text2
   325   0025B2                     __ptext2:
   326                           	callstack 0
   327   0025B2                     _add2:
   328                           	callstack 126
   329   0025B2                     
   330                           ;sub_add.c: 10:  unsigned int temp2;;sub_add.c: 11:  temp2 = b + c;
   331   0025B2  5023               	movf	add2@c^(0+1280),w,c
   332   0025B4  2421               	addwf	add2@b^(0+1280),w,c
   333   0025B6  6E25               	movwf	add2@temp2^(0+1280),c
   334   0025B8  5024               	movf	(add2@c+1)^(0+1280),w,c
   335   0025BA  2022               	addwfc	(add2@b+1)^(0+1280),w,c
   336   0025BC  6E26               	movwf	(add2@temp2+1)^(0+1280),c
   337   0025BE                     
   338                           ;sub_add.c: 12:  return temp2;
   339   0025BE  C525  F521         	movff	add2@temp2,?_add2
   340   0025C2  C526  F522         	movff	add2@temp2+1,?_add2+1
   341   0025C6  0012               	return		;funcret
   342   0025C8                     __end_of_add2:
   343                           	callstack 0
   344                           
   345 ;; *************** function _add *****************
   346 ;; Defined at:
   347 ;;		line 4 in file "sub_add.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;  a               1    wreg     unsigned char 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  a               1    0[COMRAM] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      unsigned char 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   365 ;;Total ram usage:        1 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text3
   375   0025D2                     __ptext3:
   376                           	callstack 0
   377   0025D2                     _add:
   378                           	callstack 126
   379                           
   380                           ;incstack = 0
   381                           ;add@a stored from wreg
   382   0025D2  6E21               	movwf	add@a^(0+1280),c
   383   0025D4                     
   384                           ;sub_add.c: 5:  return a + 1;
   385   0025D4  2821               	incf	add@a^(0+1280),w,c
   386   0025D6  0012               	return		;funcret
   387   0025D8                     __end_of_add:
   388                           	callstack 0
   389                           
   390                           	psect	smallconst
   391   002500                     __psmallconst:
   392                           	callstack 0
   393   002500  00                 	db	0
   394   002501  00                 	db	0	; dummy byte at the end
   395   000000                     
   396                           	psect	rparam
   397   000000                     
   398                           	psect	temp
   399   000501                     btemp:
   400                           	callstack 0
   401   000501                     	ds	32
   402   000000                     wtemp0	set	btemp
   403   000000                     wtemp1	set	btemp+2
   404   000000                     wtemp2	set	btemp+4
   405   000000                     wtemp3	set	btemp+6
   406   000000                     wtemp4	set	btemp+8
   407   000000                     wtemp5	set	btemp+10
   408   000000                     wtemp8	set	btemp+1
   409   000000                     ttemp0	set	btemp
   410   000000                     ttemp1	set	btemp+3
   411   000000                     ttemp2	set	btemp+6
   412   000000                     ttemp3	set	btemp+9
   413   000000                     ttemp5	set	btemp+1
   414   000000                     ttemp6	set	btemp+4
   415   000000                     ttemp7	set	btemp+8
   416   000000                     ltemp0	set	btemp
   417   000000                     ltemp1	set	btemp+4
   418   000000                     ltemp2	set	btemp+8
   419   000000                     lltemp0	set	btemp
   420   000000                     lltemp1	set	btemp+8
   421   000000                     lltemp2	set	btemp+16
   422   000000                     lltemp3	set	btemp+24
   423                           
   424                           	psect	config
   425                           
   426                           ;Config register CONFIG1 @ 0x300000
   427                           ;	External Oscillator Selection
   428                           ;	FEXTOSC = OFF, Oscillator not enabled
   429                           ;	Reset Oscillator Selection
   430                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   431   300000                     	org	3145728
   432   300000  8C                 	db	140
   433                           
   434                           ;Config register CONFIG2 @ 0x300001
   435                           ;	Clock out Enable bit
   436                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   437                           ;	PRLOCKED One-Way Set Enable bit
   438                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   439                           ;	Clock Switch Enable bit
   440                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   441                           ;	Fail-Safe Clock Monitor Enable bit
   442                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   443   300001                     	org	3145729
   444   300001  FF                 	db	255
   445                           
   446                           ;Config register CONFIG3 @ 0x300002
   447                           ;	MCLR Enable bit
   448                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   449                           ;	Power-up timer selection bits
   450                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   451                           ;	Multi-vector enable bit
   452                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   453                           ;	IVTLOCK bit One-way set enable bit
   454                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   455                           ;	Low Power BOR Enable bit
   456                           ;	LPBOREN = OFF, Low-Power BOR disabled
   457                           ;	Brown-out Reset Enable bits
   458                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   459   300002                     	org	3145730
   460   300002  FF                 	db	255
   461                           
   462                           ;Config register CONFIG4 @ 0x300003
   463                           ;	Brown-out Reset Voltage Selection bits
   464                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   465                           ;	ZCD Disable bit
   466                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   467                           ;	PPSLOCK bit One-Way Set Enable bit
   468                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
   469                           ;	Stack Full/Underflow Reset Enable bit
   470                           ;	STVREN = ON, Stack full/underflow will cause Reset
   471                           ;	Low Voltage Programming Enable bit
   472                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   473                           ;	Extended Instruction Set Enable bit
   474                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   475   300003                     	org	3145731
   476   300003  F7                 	db	247
   477                           
   478                           ;Config register CONFIG5 @ 0x300004
   479                           ;	WDT Period selection bits
   480                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   481                           ;	WDT operating mode
   482                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   483   300004                     	org	3145732
   484   300004  9F                 	db	159
   485                           
   486                           ;Config register CONFIG6 @ 0x300005
   487                           ;	WDT Window Select bits
   488                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   489                           ;	WDT input clock selector
   490                           ;	WDTCCS = SC, Software Control
   491   300005                     	org	3145733
   492   300005  FF                 	db	255
   493                           
   494                           ;Config register CONFIG7 @ 0x300006
   495                           ;	Boot Block Size selection bits
   496                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   497                           ;	Boot Block enable bit
   498                           ;	BBEN = OFF, Boot block disabled
   499                           ;	Storage Area Flash enable bit
   500                           ;	SAFEN = OFF, SAF disabled
   501                           ;	Background Debugger
   502                           ;	DEBUG = OFF, Background Debugger disabled
   503   300006                     	org	3145734
   504   300006  FF                 	db	255
   505                           
   506                           ;Config register CONFIG8 @ 0x300007
   507                           ;	Boot Block Write Protection bit
   508                           ;	WRTB = OFF, Boot Block not Write protected
   509                           ;	Configuration Register Write Protection bit
   510                           ;	WRTC = OFF, Configuration registers not Write protected
   511                           ;	Data EEPROM Write Protection bit
   512                           ;	WRTD = OFF, Data EEPROM not Write protected
   513                           ;	SAF Write protection bit
   514                           ;	WRTSAF = OFF, SAF not Write Protected
   515                           ;	Application Block write protection bit
   516                           ;	WRTAPP = OFF, Application Block not write protected
   517   300007                     	org	3145735
   518   300007  FF                 	db	255
   519                           
   520                           ;Config register CONFIG10 @ 0x300009
   521                           ;	PFM and Data EEPROM Code Protection bit
   522                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   523   300009                     	org	3145737
   524   300009  FF                 	db	255
   525                           tosu	equ	0x4FF
   526                           tosh	equ	0x4FE
   527                           tosl	equ	0x4FD
   528                           stkptr	equ	0x4FC
   529                           pclatu	equ	0x4FB
   530                           pclath	equ	0x4FA
   531                           pcl	equ	0x4F9
   532                           tblptru	equ	0x4F8
   533                           tblptrh	equ	0x4F7
   534                           tblptrl	equ	0x4F6
   535                           tablat	equ	0x4F5
   536                           prodh	equ	0x4F4
   537                           prodl	equ	0x4F3
   538                           indf0	equ	0x4EF
   539                           postinc0	equ	0x4EE
   540                           postdec0	equ	0x4ED
   541                           preinc0	equ	0x4EC
   542                           plusw0	equ	0x4EB
   543                           fsr0h	equ	0x4EA
   544                           fsr0l	equ	0x4E9
   545                           wreg	equ	0x4E8
   546                           indf1	equ	0x4E7
   547                           postinc1	equ	0x4E6
   548                           postdec1	equ	0x4E5
   549                           preinc1	equ	0x4E4
   550                           plusw1	equ	0x4E3
   551                           fsr1h	equ	0x4E2
   552                           fsr1l	equ	0x4E1
   553                           bsr	equ	0x4E0
   554                           indf2	equ	0x4DF
   555                           postinc2	equ	0x4DE
   556                           postdec2	equ	0x4DD
   557                           preinc2	equ	0x4DC
   558                           plusw2	equ	0x4DB
   559                           fsr2h	equ	0x4DA
   560                           fsr2l	equ	0x4D9
   561                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     13      15
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_add2

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     348
                                              6 COMRAM     7     7      0
                                _add
                               _add2
                               _add3
 ---------------------------------------------------------------------------------
 (1) _add3                                                 6     2      4      45
 ---------------------------------------------------------------------------------
 (1) _add2                                                 6     2      4     219
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _add                                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _add
   _add2
   _add3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
BITBIGSFR          500      0       0      71        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      D       F       1       23.8%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       A       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      44        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat May 11 20:38:12 2024

                     l22 25C6                       l25 25A8                       l19 25D6  
                    l701 25D4                      l711 256C                      l713 2598  
                    l723 25B2                      l731 2524                      l725 25BE  
                    l733 2544                      l729 2502                      _add 25D2  
                   ?_add 0521                     _add2 25B2                     _add3 2568  
                   add@a 0521                     _main 2502                     fsr1h 04E2  
                   fsr1l 04E1                     btemp 0501                     start FFF8  
           ___param_bank 0000                    ??_add 0521                    ?_add2 0521  
                  ?_main 0521                    add2@b 0521                    add2@c 0523  
                  ltemp0 0501                    ltemp1 0505                    ltemp2 0509  
                  plusw1 04E3                    ttemp0 0501                    ttemp1 0504  
                  ttemp2 0507                    ttemp3 050A                    ttemp5 0502  
                  ttemp6 0505                    ttemp7 0509                    wtemp0 0501  
                  wtemp1 0503                    wtemp2 0505                    wtemp3 0507  
                  wtemp4 0509                    wtemp5 050B                    wtemp8 0502  
        __initialization 25C8             __end_of_add2 25C8             __end_of_add3 25B2  
           __end_of_main 2568                   ??_add2 0525                   ??_main 0527  
          __activetblptr 0000                   _value4 052E                   isa$std 0001  
                 lltemp0 0501                   lltemp1 0509                   lltemp2 0511  
                 lltemp3 0519             __mediumconst 0000               __accesstop 0560  
__end_of__initialization 25CC            ___rparam_used 0001           __pcstackCOMRAM 0521  
                __Hparam 0000                  __Lparam 0000             __psmallconst 2500  
                __pcinit 25C8                  __ramtop 2500                  __ptext0 2502  
                __ptext1 2568                  __ptext2 25B2                  __ptext3 25D2  
   end_of_initialization 25CC                  postinc1 04E6               main@value1 052D  
             main@value2 0529               main@value3 052B      start_initialization 25C8  
            __end_of_add 25D8                add2@temp2 0525              __pbssCOMRAM 052E  
            __smallconst 2500                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000  
